'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var useConstant = _interopDefault(require('use-constant'));

const TabsState = React.createContext();
const Elements = React.createContext();
const Tabs = ({
  state: outerState,
  children
}) => {
  const innerState = React.useState(0);
  const elements = useConstant(() => ({
    tabs: 0,
    panels: 0
  }));
  const state = outerState || innerState;
  return React__default.createElement(Elements.Provider, {
    value: elements
  }, React__default.createElement(TabsState.Provider, {
    value: state
  }, children));
};
const useTabState = () => {
  const [activeIndex, setActive] = React.useContext(TabsState);
  const elements = React.useContext(Elements);
  const tabIndex = useConstant(() => {
    const currentIndex = elements.tabs;
    elements.tabs += 1;
    return currentIndex;
  });
  const onClick = useConstant(() => () => setActive(tabIndex));
  const state = React.useMemo(() => ({
    isActive: activeIndex === tabIndex,
    onClick
  }), [activeIndex, onClick, tabIndex]);
  return state;
};
const usePanelState = () => {
  const [activeIndex] = React.useContext(TabsState);
  const elements = React.useContext(Elements);
  const panelIndex = useConstant(() => {
    const currentIndex = elements.panels;
    elements.panels += 1;
    return currentIndex;
  });
  return panelIndex === activeIndex;
};
const Tab = ({
  children
}) => {
  const state = useTabState();

  if (typeof children === 'function') {
    return children(state);
  }

  return React.isValidElement(children) ? React.cloneElement(children, state) : children;
};
const Panel = ({
  active,
  children
}) => {
  const isActive = usePanelState();
  return isActive || active ? children : null;
};

exports.Panel = Panel;
exports.Tab = Tab;
exports.Tabs = Tabs;
exports.usePanelState = usePanelState;
exports.useTabState = useTabState;
