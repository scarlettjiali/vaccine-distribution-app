{"ast":null,"code":"import React, { createContext, useState, useContext, useMemo, isValidElement, cloneElement } from 'react';\nimport useConstant from 'use-constant';\nconst TabsState = createContext();\nconst Elements = createContext();\n\nconst Tabs = ({\n  state: outerState,\n  children\n}) => {\n  const innerState = useState(0);\n  const elements = useConstant(() => ({\n    tabs: 0,\n    panels: 0\n  }));\n  const state = outerState || innerState;\n  return React.createElement(Elements.Provider, {\n    value: elements\n  }, React.createElement(TabsState.Provider, {\n    value: state\n  }, children));\n};\n\nconst useTabState = () => {\n  const [activeIndex, setActive] = useContext(TabsState);\n  const elements = useContext(Elements);\n  const tabIndex = useConstant(() => {\n    const currentIndex = elements.tabs;\n    elements.tabs += 1;\n    return currentIndex;\n  });\n  const onClick = useConstant(() => () => setActive(tabIndex));\n  const state = useMemo(() => ({\n    isActive: activeIndex === tabIndex,\n    onClick\n  }), [activeIndex, onClick, tabIndex]);\n  return state;\n};\n\nconst usePanelState = () => {\n  const [activeIndex] = useContext(TabsState);\n  const elements = useContext(Elements);\n  const panelIndex = useConstant(() => {\n    const currentIndex = elements.panels;\n    elements.panels += 1;\n    return currentIndex;\n  });\n  return panelIndex === activeIndex;\n};\n\nconst Tab = ({\n  children\n}) => {\n  const state = useTabState();\n\n  if (typeof children === 'function') {\n    return children(state);\n  }\n\n  return isValidElement(children) ? cloneElement(children, state) : children;\n};\n\nconst Panel = ({\n  active,\n  children\n}) => {\n  const isActive = usePanelState();\n  return isActive || active ? children : null;\n};\n\nexport { Panel, Tab, Tabs, usePanelState, useTabState };","map":{"version":3,"sources":["/Users/jl_s/Gatech/2021Spring/6242/TeamProject/vaccine-distribution-app/D3Visualization/node_modules/@bumaga/tabs/dist/index.js"],"names":["React","createContext","useState","useContext","useMemo","isValidElement","cloneElement","useConstant","TabsState","Elements","Tabs","state","outerState","children","innerState","elements","tabs","panels","createElement","Provider","value","useTabState","activeIndex","setActive","tabIndex","currentIndex","onClick","isActive","usePanelState","panelIndex","Tab","Panel","active"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useContext, useMemo, isValidElement, cloneElement } from 'react';\nimport useConstant from 'use-constant';\n\nconst TabsState = createContext();\nconst Elements = createContext();\nconst Tabs = ({\n  state: outerState,\n  children\n}) => {\n  const innerState = useState(0);\n  const elements = useConstant(() => ({\n    tabs: 0,\n    panels: 0\n  }));\n  const state = outerState || innerState;\n  return React.createElement(Elements.Provider, {\n    value: elements\n  }, React.createElement(TabsState.Provider, {\n    value: state\n  }, children));\n};\nconst useTabState = () => {\n  const [activeIndex, setActive] = useContext(TabsState);\n  const elements = useContext(Elements);\n  const tabIndex = useConstant(() => {\n    const currentIndex = elements.tabs;\n    elements.tabs += 1;\n    return currentIndex;\n  });\n  const onClick = useConstant(() => () => setActive(tabIndex));\n  const state = useMemo(() => ({\n    isActive: activeIndex === tabIndex,\n    onClick\n  }), [activeIndex, onClick, tabIndex]);\n  return state;\n};\nconst usePanelState = () => {\n  const [activeIndex] = useContext(TabsState);\n  const elements = useContext(Elements);\n  const panelIndex = useConstant(() => {\n    const currentIndex = elements.panels;\n    elements.panels += 1;\n    return currentIndex;\n  });\n  return panelIndex === activeIndex;\n};\nconst Tab = ({\n  children\n}) => {\n  const state = useTabState();\n\n  if (typeof children === 'function') {\n    return children(state);\n  }\n\n  return isValidElement(children) ? cloneElement(children, state) : children;\n};\nconst Panel = ({\n  active,\n  children\n}) => {\n  const isActive = usePanelState();\n  return isActive || active ? children : null;\n};\n\nexport { Panel, Tab, Tabs, usePanelState, useTabState };\n"]},"metadata":{},"sourceType":"module"}