{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/Vaccination.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, Suspense } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport MapChart from './MapChart';\nimport '../App.css';\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from 'react-simple-maps';\nimport LocationCard from \"./LocationCard\";\n\nfunction Vaccination() {\n  _s();\n\n  // const [content, setContent] = useState(null);\n  const [state, setUSState] = useState(null); // const [vender, setVender] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7\").then(response => response.json()).then(data => setUSState({\n      data\n    }));\n  }, []);\n  console.log(\"-----\", state);\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    \"data-tip\": \"\",\n    projection: \"geoAlbersUsa\",\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: geographies.map(geo => {\n          var _vaccineData;\n\n          const centroid = geoCentroid(geo);\n          console.log(\"___++\", centroid);\n          const cur = allStates.find(s => s.val === geo.id);\n          const stateData = (_vaccineData = vaccineData) === null || _vaccineData === void 0 ? void 0 : _vaccineData.data.find(e => e.code === cur.id); // return (\n          //     <>\n          //         <Geography\n          //             key={geo.rsmKey}\n          //             stroke=\"#FFF\"\n          //             geography={geo}\n          //             fill=\"#DDD\"\n          //             style={{\n          //                 default: {\n          //                     fill: colorScale(stateData?.store_count || 0),\n          //                     outline: 'none',\n          //                 },\n          //                 hover: {\n          //                     fill: \"#C53030\",\n          //                     outline: 'none',\n          //                 }\n          //             }}\n          //             onMouseEnter={() => handleMouseEnter(geo.id, geo.properties.name)}\n          //             onClick={() => handleClick(geo.id)}\n          //             onMouseLeave={() => setTooltipContent(null)}\n          //         />\n          //         <g key={geo.rsmKey + '-name'}>\n          //             {cur &&\n          //             centroid[0] > -160 &&\n          //             centroid[0] < -67 &&\n          //             (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n          //                 <Marker coordinates={centroid}>\n          //                     <text\n          //                         textAnchor=\"left\"\n          //                         fill=\"#FFF\"\n          //                     >\n          //                         {cur.id}\n          //                     </text>\n          //                 </Marker>\n          //             ) : (\n          //                 <Annotation\n          //                     subject={centroid}\n          //                     dx={offsets[cur.id][0]}\n          //                     dy={offsets[cur.id][1]}\n          //                 >\n          //                     <text x={4} fontSize={14}>\n          //                         {cur.id}\n          //                     </text>\n          //                 </Annotation>\n          //             ))}\n          //         </g>\n          //     </>\n          // );\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Vaccination, \"i1OLr2bbLHaU08mtSQf4y98fsYw=\");\n\n_c = Vaccination;\nexport default Vaccination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vaccination\");","map":{"version":3,"sources":["/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/Vaccination.js"],"names":["useState","useEffect","Suspense","ReactTooltip","MapChart","ComposableMap","Geographies","Geography","Marker","Annotation","LocationCard","Vaccination","state","setUSState","fetch","then","response","json","data","console","log","geoUrl","geographies","map","geo","centroid","geoCentroid","cur","allStates","find","s","val","id","stateData","vaccineData","e","code"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,YAAP;AACA,SACIC,aADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,MAJJ,EAKIC,UALJ,QAMO,mBANP;AAOA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACnB;AACA,QAAM,CAACC,KAAD,EAAQC,UAAR,IAAsBb,QAAQ,CAAC,IAAD,CAApC,CAFmB,CAGnB;;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAC,oFAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIL,UAAU,CAAC;AAACK,MAAAA;AAAD,KAAD,CAF5B;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBR,KAApB;AACA,sBACI,QAAC,aAAD;AAAe,gBAAS,EAAxB;AAA2B,IAAA,UAAU,EAAC,cAAtC;AAAA,2BACG,QAAC,WAAD;AAAa,MAAA,SAAS,EAAES,MAAxB;AAAA,gBACM,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACG;AAAA,kBAEKA,WAAW,CAACC,GAAZ,CAAiBC,GAAD,IAAS;AAAA;;AAEtB,gBAAMC,QAAQ,GAAGC,WAAW,CAACF,GAAD,CAA5B;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBK,QAApB;AACA,gBAAME,GAAG,GAAGC,SAAS,CAACC,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUP,GAAG,CAACQ,EAApC,CAAZ;AACA,gBAAMC,SAAS,mBAAGC,WAAH,iDAAG,aAAahB,IAAb,CAAkBW,IAAlB,CAAwBM,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWT,GAAG,CAACK,EAA7C,CAAlB,CALsB,CAMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,SAtDA;AAFL;AAFT;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAkEH;;GA/EQrB,W;;KAAAA,W;AAiFT,eAAeA,WAAf","sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport MapChart from './MapChart';\nimport '../App.css';\nimport {\n    ComposableMap,\n    Geographies,\n    Geography,\n    Marker,\n    Annotation,\n} from 'react-simple-maps';\nimport LocationCard from \"./LocationCard\";\n\n\nfunction Vaccination() {\n    // const [content, setContent] = useState(null);\n    const [state, setUSState] = useState(null);\n    // const [vender, setVender] = useState(null);\n\n    \n\n    useEffect(() => {\n        fetch(\"https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7\")\n            .then(response => response.json())\n            .then(data => setUSState({data}));\n    }, []);\n    console.log(\"-----\",state)\n    return (\n        <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n           <Geographies geography={geoUrl}>\n                {({ geographies }) => (\n                    <>\n                    \n                        {geographies.map((geo) => {\n                            \n                            const centroid = geoCentroid(geo);\n                            console.log(\"___++\",centroid)\n                            const cur = allStates.find((s) => s.val === geo.id);\n                            const stateData = vaccineData?.data.find((e) => e.code === cur.id)\n                            // return (\n                            //     <>\n                            //         <Geography\n                            //             key={geo.rsmKey}\n                            //             stroke=\"#FFF\"\n                            //             geography={geo}\n                            //             fill=\"#DDD\"\n                            //             style={{\n                            //                 default: {\n                            //                     fill: colorScale(stateData?.store_count || 0),\n                            //                     outline: 'none',\n                            //                 },\n                            //                 hover: {\n                            //                     fill: \"#C53030\",\n                            //                     outline: 'none',\n                            //                 }\n                            //             }}\n                            //             onMouseEnter={() => handleMouseEnter(geo.id, geo.properties.name)}\n                            //             onClick={() => handleClick(geo.id)}\n                            //             onMouseLeave={() => setTooltipContent(null)}\n                            //         />\n                            //         <g key={geo.rsmKey + '-name'}>\n                            //             {cur &&\n                            //             centroid[0] > -160 &&\n                            //             centroid[0] < -67 &&\n                            //             (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                            //                 <Marker coordinates={centroid}>\n                            //                     <text\n                            //                         textAnchor=\"left\"\n                            //                         fill=\"#FFF\"\n                            //                     >\n                            //                         {cur.id}\n                            //                     </text>\n                            //                 </Marker>\n                            //             ) : (\n                            //                 <Annotation\n                            //                     subject={centroid}\n                            //                     dx={offsets[cur.id][0]}\n                            //                     dy={offsets[cur.id][1]}\n                            //                 >\n                            //                     <text x={4} fontSize={14}>\n                            //                         {cur.id}\n                            //                     </text>\n                            //                 </Annotation>\n                            //             ))}\n                            //         </g>\n                            //     </>\n                            // );\n                        })} \n                    </>\n                )} \n            </Geographies>\n        </ComposableMap>\n    );\n}\n\nexport default Vaccination;\n"]},"metadata":{},"sourceType":"module"}