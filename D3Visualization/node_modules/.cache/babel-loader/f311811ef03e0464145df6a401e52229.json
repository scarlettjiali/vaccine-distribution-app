{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/Cases.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport '../App.css';\nimport { scaleQuantize } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from 'react-simple-maps';\nimport allStates from '../data/allstates.json';\nconst geoUrl = 'https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json';\n\nfunction Cases() {\n  _s();\n\n  const [state, setUSState] = useState(null);\n  const offsets = {\n    VT: [50, -8],\n    NH: [34, 2],\n    MA: [30, -1],\n    RI: [28, 2],\n    CT: [35, 10],\n    NJ: [34, 1],\n    DE: [33, 0],\n    MD: [47, 10],\n    DC: [49, 21]\n  };\n  useEffect(() => {\n    fetch(\"https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7\").then(response => response.json()).then(data => setUSState({\n      data\n    }));\n  }, []);\n  const colorScale = scaleQuantize().domain([0, 1000000]).range([\"#F4F4CC\", \"#E7E3A3\", \"#C3D977\", \"#8BC94C\", \"#44B823\", \"#1EA31C\", \"#168E2F\", \"#11783C\", \"#0C6142\"]);\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    \"data-tip\": \"\",\n    projection: \"geoAlbersUsa\",\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: geographies.map(geo => {\n          const cur = allStates.find(s => s.val === geo.id);\n          const stateData = state === null || state === void 0 ? void 0 : state.data.find(e => e.state === cur.id);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Geography, {\n              stroke: \"#FFF\",\n              geography: geo,\n              fill: \"#DDD\",\n              style: {\n                default: {\n                  fill: colorScale(stateData === null || stateData === void 0 ? void 0 : stateData.actuals.cases),\n                  outline: 'none'\n                },\n                hover: {\n                  fill: \"#C53030\",\n                  outline: 'none'\n                }\n              } // onMouseEnter={() => handleMouseEnter(geo.id, geo.properties.name)}\n              // onClick={() => handleClick(geo.id)}\n              // onMouseLeave={() => setTooltipContent(null)}\n\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n              children: cur && geo.id[0] > -160 && geo.id[0] < -67 && (Object.keys(offsets).indexOf(cur.id) === -1 ? /*#__PURE__*/_jsxDEV(Marker, {\n                coordinates: geo.id,\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  textAnchor: \"left\",\n                  fill: \"#FFF\",\n                  children: cur.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(Annotation, {\n                subject: geo.id,\n                dx: offsets[cur.id][0],\n                dy: offsets[cur.id][1],\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: 4,\n                  fontSize: 14,\n                  children: cur.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this))\n            }, geo.rsmKey + '-name', false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cases, \"i1OLr2bbLHaU08mtSQf4y98fsYw=\");\n\n_c = Cases;\nexport default Cases;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cases\");","map":{"version":3,"sources":["/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/Cases.js"],"names":["useState","useEffect","scaleQuantize","ComposableMap","Geographies","Geography","Marker","Annotation","allStates","geoUrl","Cases","state","setUSState","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","fetch","then","response","json","data","colorScale","domain","range","geographies","map","geo","cur","find","s","val","id","stateData","e","default","fill","actuals","cases","outline","hover","rsmKey","Object","keys","indexOf"],"mappings":"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","sourcesContent":["import { useState, useEffect} from 'react';\nimport '../App.css';\nimport { scaleQuantize } from \"d3-scale\";\nimport {\n    ComposableMap,\n    Geographies,\n    Geography,\n    Marker,\n    Annotation,\n} from 'react-simple-maps';\nimport allStates from '../data/allstates.json';\n\nconst geoUrl = 'https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json';\n\n\nfunction Cases() {\n    const [state, setUSState] = useState(null);\n    \n    const offsets = {\n        VT: [50, -8],\n        NH: [34, 2],\n        MA: [30, -1],\n        RI: [28, 2],\n        CT: [35, 10],\n        NJ: [34, 1],\n        DE: [33, 0],\n        MD: [47, 10],\n        DC: [49, 21],\n    };\n\n    useEffect(() => {\n        fetch(\"https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7\")\n            .then(response => response.json())\n            .then(data => setUSState({data}));\n    }, []);\n   \n    const colorScale = scaleQuantize()\n    .domain([0, 1000000])\n    .range([\n        \"#F4F4CC\",\n        \"#E7E3A3\",\n        \"#C3D977\",\n        \"#8BC94C\",\n        \"#44B823\",\n        \"#1EA31C\",\n        \"#168E2F\",\n        \"#11783C\",\n        \"#0C6142\",\n    ]);\n\n    return (\n        <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n           <Geographies geography={geoUrl}>\n                {({ geographies }) => (\n                    <>\n                        {geographies.map((geo) => {\n                            const cur = allStates.find((s) => s.val === geo.id);\n                            const stateData = state?.data.find((e) => e.state === cur.id)\n                            return (\n                                \n                                <>\n                                    <Geography\n                                        key={geo.rsmKey}\n                                        stroke=\"#FFF\"\n                                        geography={geo}\n                                        fill=\"#DDD\"\n                                        style={{\n                                            default: {\n                                                fill: colorScale(stateData?.actuals.cases),\n                                                outline: 'none',\n                                            },\n                                            hover: {\n                                                fill: \"#C53030\",\n                                                outline: 'none',\n                                            }\n                                        }}\n                                        // onMouseEnter={() => handleMouseEnter(geo.id, geo.properties.name)}\n                                        // onClick={() => handleClick(geo.id)}\n                                        // onMouseLeave={() => setTooltipContent(null)}\n                                    />\n                                    <g key={geo.rsmKey + '-name'}>\n                                        {cur &&\n                                        geo.id[0] > -160 &&\n                                        geo.id[0] < -67 &&\n                                        (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                                            <Marker coordinates={geo.id}>\n                                                <text\n                                                    textAnchor=\"left\"\n                                                    fill=\"#FFF\"\n                                                >\n                                                    {cur.id}\n                                                </text>\n                                            </Marker>\n                                        ) : (\n                                            <Annotation\n                                                subject={geo.id}\n                                                dx={offsets[cur.id][0]}\n                                                dy={offsets[cur.id][1]}\n                                            >\n                                                <text x={4} fontSize={14}>\n                                                    {cur.id}\n                                                </text>\n                                            </Annotation>\n                                        ))}\n                                    </g>\n                                </>\n                            );\n                        })} \n                    </>\n                )} \n            </Geographies>\n        </ComposableMap>\n        \n    );\n}\n\nexport default Cases;\n"]},"metadata":{},"sourceType":"module"}