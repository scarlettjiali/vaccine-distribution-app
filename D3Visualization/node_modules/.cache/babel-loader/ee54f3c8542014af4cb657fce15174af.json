{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, halfPi, min, pi, sign, sqrt } from \"./math.js\";\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [sign(lambda) * halfPi * x1, sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)];\n}\n\nvanDerGrinten4Raw.invert = function (x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  var sy = sign(y);\n  y = abs(y) / pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = y * (2 - (y > 0.5 ? min(y, abs(x)) : 0)),\n      r = x * x + y * y,\n      i = 50;\n\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta * r * r > epsilon && --i > 0);\n\n  return [sign(x) * (sqrt(D * D + 4) + D) * pi / 4, sy * halfPi * B];\n};\n\nexport default function () {\n  return projection(vanDerGrinten4Raw).scale(127.16);\n}","map":{"version":3,"sources":["/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/node_modules/d3-geo-projection/src/vanDerGrinten4.js"],"names":["geoProjection","projection","abs","epsilon","halfPi","min","pi","sign","sqrt","vanDerGrinten4Raw","lambda","phi","phi0","B","B2","C","C2","BC","B_C2","B_3C","lambda0","lambda1","D","D2","F","x1","invert","x","y","delta","sy","r","i","C_","B_C","F_","sqrtF","f","f_","scale"],"mappings":"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","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, halfPi, min, pi, sign, sqrt} from \"./math.js\";\n\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [\n    sign(lambda) * halfPi * x1,\n    sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)\n  ];\n}\n\nvanDerGrinten4Raw.invert = function(x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  var sy = sign(y);\n  y = abs(y) / pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = y * (2 - (y > 0.5 ? min(y, abs(x)) : 0)),\n      r = x * x + y * y,\n      i = 50;\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta * r * r > epsilon && --i > 0);\n  return [\n    sign(x) * (sqrt(D * D + 4) + D) * pi / 4,\n    sy * halfPi * B\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten4Raw)\n      .scale(127.16);\n}\n"]},"metadata":{},"sourceType":"module"}