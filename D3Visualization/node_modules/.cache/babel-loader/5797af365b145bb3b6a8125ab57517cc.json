{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/Cases.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, Suspense } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport MapChart from './MapChart';\nimport '../App.css';\nimport LocationCard from \"./LocationCard\";\n\nfunction Cases() {\n  _s();\n\n  const [content, setContent] = useState(null);\n  const [state, setUSState] = useState(null); // const [vender, setVender] = useState(null);\n  // useEffect(() => {\n  //     fetch(`https://www.vaccinespotter.org/api/v0/states/${state}.json`)\n  //         .then(response => response.json())\n  //         .then(data => setVender({data}));\n  // }, [state]);\n  // console.log(vender,state)\n\n  const [Data, setData] = useState(null);\n  useEffect(() => {\n    fetch('https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7').then(response => response.json()).then(data => setData({\n      data\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fetching results...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Loading...\"\n        }, void 0, false),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid 19 Vaccine Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapChart, {\n        setTooltipContent: setContent,\n        setUSState: setUSState,\n        data: Data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this); // const [zoom, setZoom] = useState(2)\n  // const [state, setUSState] = useState(null);\n  // const offsets = {\n  //     VT: [50, -8],\n  //     NH: [34, 2],\n  //     MA: [30, -1],\n  //     RI: [28, 2],\n  //     CT: [35, 10],\n  //     NJ: [34, 1],\n  //     DE: [33, 0],\n  //     MD: [47, 10],\n  //     DC: [49, 21],\n  // };\n  // useEffect(() => {\n  //     fetch(\"https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7\")\n  //         .then(response => response.json())\n  //         .then(data => setUSState({data}));\n  // }, []);\n  // const colorScale = scaleQuantize()\n  // .domain([0, 1000000])\n  // .range([\n  //     \"#F4F4CC\",\n  //     \"#E7E3A3\",\n  //     \"#C3D977\",\n  //     \"#8BC94C\",\n  //     \"#44B823\",\n  //     \"#1EA31C\",\n  //     \"#168E2F\",\n  //     \"#11783C\",\n  //     \"#0C6142\",\n  // ]);\n  // console.log(zoom)\n  // return (\n  //     <>\n  //     <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n  //         {/* <ZoomableGroup center={[-mapCenter[0], -mapCenter[1]]} */}\n  //         disablePanning>\n  //        <Geographies geography={geoUrl}>\n  //             {({ geographies }) => (\n  //                 <>\n  //                     {geographies.map((geo) => {\n  //                         const cur = allStates.find((s) => s.val === geo.id);\n  //                         const stateData = state?.data.find((e) => e.state === cur.id)\n  //                         // console.log(\"key---\",stateData)\n  //                         return (   \n  //                             <>\n  //                                 <Geography\n  //                                     key={geo.rsmKey}\n  //                                     stroke=\"#FFF\"\n  //                                     geography={geo}\n  //                                     fill=\"#DDD\"\n  //                                     style={{\n  //                                         default: {\n  //                                             fill: colorScale(stateData?.actuals.cases),\n  //                                             outline: 'none',\n  //                                         },\n  //                                         hover: {\n  //                                             fill: \"#C53030\",\n  //                                             outline: 'none',\n  //                                         }\n  //                                     }}\n  //                                     // onMouseEnter={() => handleMouseEnter(geo.id, geo.properties.name)}\n  //                                     // onClick={() => handleClick(geo.id)}\n  //                                     // onMouseLeave={() => setTooltipContent(null)}\n  //                                 />\n  //                                 <g key={geo.rsmKey + '-name'}>\n  //                                     {cur &&\n  //                                     geo.id[0] > -160 &&\n  //                                     geo.id[0] < -67 &&\n  //                                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n  //                                         <Marker coordinates={geo.id}>\n  //                                             <text\n  //                                                 textAnchor=\"left\"\n  //                                                 fill=\"#FFF\"\n  //                                             >\n  //                                                 {cur.id}\n  //                                             </text>\n  //                                         </Marker>\n  //                                     ) : (\n  //                                         <Annotation\n  //                                             subject={geo.id}\n  //                                             dx={offsets[cur.id][0]}\n  //                                             dy={offsets[cur.id][1]}\n  //                                         >\n  //                                             <text x={4} fontSize={14}>\n  //                                                 {cur.id}\n  //                                             </text>\n  //                                         </Annotation>\n  //                                     ))}\n  //                                 </g>\n  //                             </>\n  //                         );\n  //                     })} \n  //                 </>\n  //             )} \n  //         </Geographies>\n  //         {/* </ZoomableGroup> */}\n  //     </ComposableMap>\n  //     {/* <ReactTooltip>{content}</ReactTooltip> */}\n  //     {/* <button className=\"ZoomBtn\" onClick={() => setZoom(prev => prev + 1)}>\n  //     +\n  //   </button>\n  //   <button className=\"ZoomBtn\" onClick={() => setZoom(prev => prev - 1)}>\n  //     -\n  //   </button> */}\n  //   </>\n  // );\n}\n\n_s(Cases, \"bKAY3Wh/ECBEmLL4b+ffI8QU/zg=\");\n\n_c = Cases;\nexport default Cases;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cases\");","map":{"version":3,"sources":["/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/Cases.js"],"names":["useState","useEffect","Suspense","ReactTooltip","MapChart","LocationCard","Cases","content","setContent","state","setUSState","Data","setData","fetch","then","response","json","data"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,YAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAIA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,UAAR,IAAsBV,QAAQ,CAAC,IAAD,CAApC,CAFa,CAGb;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAC,oFAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIL,OAAO,CAAC;AAACK,MAAAA;AAAD,KAAD,CAFzB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,QAAQ,eAAE;AAAA;AAAA,yBAApB;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,QAAD;AAAU,QAAA,iBAAiB,EAAET,UAA7B;AAAyC,QAAA,UAAU,EAAEE,UAArD;AAAiE,QAAA,IAAI,EAAEC;AAAvE;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CAhBa,CA4CbiKT,eAAeA,KAAf","sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport MapChart from './MapChart';\nimport '../App.css';\nimport LocationCard from \"./LocationCard\";\n\n\n\nfunction Cases() {\n    const [content, setContent] = useState(null);\n    const [state, setUSState] = useState(null);\n    // const [vender, setVender] = useState(null);\n    // useEffect(() => {\n    //     fetch(`https://www.vaccinespotter.org/api/v0/states/${state}.json`)\n    //         .then(response => response.json())\n    //         .then(data => setVender({data}));\n    // }, [state]);\n    // console.log(vender,state)\n    const [Data, setData] = useState(null);\n    useEffect(() => {\n        fetch('https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7')\n            .then(response => response.json())\n            .then(data => setData({data}));\n    }, [])\n    return (\n        <div className=\"container\">\n            <Suspense fallback={<div>Fetching results...</div>}>\n                <Suspense fallback={<>Loading...</>}>\n                    <h1>Covid 19 Vaccine Tracker</h1>\n                </Suspense>\n                <MapChart setTooltipContent={setContent} setUSState={setUSState} data={Data}/>\n            </Suspense>\n            {/* <ReactTooltip\n                className=\"tooltip\"\n                textColor=\"black\"\n                backgroundColor=\"white\"\n            >\n                {content && (\n                    <>\n                        <h3>{content.name}</h3>\n                        <p className=\"elect-total\">{content.provider_count} available providers count</p>\n                        <p className=\"elect-total\">{content.total_provider_count} available stores count</p>\n                        <p className=\"elect-total\">Available detailed information</p>\n                        {content.provider_brands.map((brand, i) => {\n                            return <li key={brand.id}><b>{brand.name}</b> store count: {brand.location_count}</li>;\n                        })}\n                    </>\n                )}\n            </ReactTooltip>\n            {vender && <LocationCard vender={vender} />} */}\n        </div>\n    );\n    // const [zoom, setZoom] = useState(2)\n\n    // const [state, setUSState] = useState(null);\n    \n    // const offsets = {\n    //     VT: [50, -8],\n    //     NH: [34, 2],\n    //     MA: [30, -1],\n    //     RI: [28, 2],\n    //     CT: [35, 10],\n    //     NJ: [34, 1],\n    //     DE: [33, 0],\n    //     MD: [47, 10],\n    //     DC: [49, 21],\n    // };\n\n    // useEffect(() => {\n    //     fetch(\"https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7\")\n    //         .then(response => response.json())\n    //         .then(data => setUSState({data}));\n    // }, []);\n   \n    // const colorScale = scaleQuantize()\n    // .domain([0, 1000000])\n    // .range([\n    //     \"#F4F4CC\",\n    //     \"#E7E3A3\",\n    //     \"#C3D977\",\n    //     \"#8BC94C\",\n    //     \"#44B823\",\n    //     \"#1EA31C\",\n    //     \"#168E2F\",\n    //     \"#11783C\",\n    //     \"#0C6142\",\n    // ]);\n    // console.log(zoom)\n\n    // return (\n    //     <>\n    //     <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n    //         {/* <ZoomableGroup center={[-mapCenter[0], -mapCenter[1]]} */}\n    //         disablePanning>\n    //        <Geographies geography={geoUrl}>\n    //             {({ geographies }) => (\n    //                 <>\n    //                     {geographies.map((geo) => {\n    //                         const cur = allStates.find((s) => s.val === geo.id);\n    //                         const stateData = state?.data.find((e) => e.state === cur.id)\n    //                         // console.log(\"key---\",stateData)\n    //                         return (   \n    //                             <>\n                                \n    //                                 <Geography\n    //                                     key={geo.rsmKey}\n    //                                     stroke=\"#FFF\"\n    //                                     geography={geo}\n    //                                     fill=\"#DDD\"\n    //                                     style={{\n    //                                         default: {\n    //                                             fill: colorScale(stateData?.actuals.cases),\n    //                                             outline: 'none',\n    //                                         },\n    //                                         hover: {\n    //                                             fill: \"#C53030\",\n    //                                             outline: 'none',\n    //                                         }\n    //                                     }}\n    //                                     // onMouseEnter={() => handleMouseEnter(geo.id, geo.properties.name)}\n    //                                     // onClick={() => handleClick(geo.id)}\n    //                                     // onMouseLeave={() => setTooltipContent(null)}\n    //                                 />\n    //                                 <g key={geo.rsmKey + '-name'}>\n    //                                     {cur &&\n    //                                     geo.id[0] > -160 &&\n    //                                     geo.id[0] < -67 &&\n    //                                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n    //                                         <Marker coordinates={geo.id}>\n    //                                             <text\n    //                                                 textAnchor=\"left\"\n    //                                                 fill=\"#FFF\"\n    //                                             >\n    //                                                 {cur.id}\n    //                                             </text>\n    //                                         </Marker>\n    //                                     ) : (\n    //                                         <Annotation\n    //                                             subject={geo.id}\n    //                                             dx={offsets[cur.id][0]}\n    //                                             dy={offsets[cur.id][1]}\n    //                                         >\n    //                                             <text x={4} fontSize={14}>\n    //                                                 {cur.id}\n    //                                             </text>\n    //                                         </Annotation>\n    //                                     ))}\n    //                                 </g>\n    //                             </>\n    //                         );\n    //                     })} \n    //                 </>\n    //             )} \n                \n    //         </Geographies>\n    //         {/* </ZoomableGroup> */}\n    //     </ComposableMap>\n    //     {/* <ReactTooltip>{content}</ReactTooltip> */}\n    //     {/* <button className=\"ZoomBtn\" onClick={() => setZoom(prev => prev + 1)}>\n    //     +\n    //   </button>\n    //   <button className=\"ZoomBtn\" onClick={() => setZoom(prev => prev - 1)}>\n    //     -\n    //   </button> */}\n    //   </>\n        \n    // );\n}\n\nexport default Cases;\n"]},"metadata":{},"sourceType":"module"}