{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jl_s/Gatech/2021Spring/6242/TeamProject/vaccine-distribution-app/D3Visualization/src/components/LocationCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport LocalVaccineMap from \"./LocalVaccineMap\"; // constants\n\nconst DISPLAY_LENGTH = 8;\nconst COL_PER_ROW = 4;\n\nconst Header = ({\n  vender\n}) => {\n  _s();\n\n  var _vender$data, _listOfAppointments$p, _listOfAppointments$p2, _listOfAppointments$p3, _listOfAppointments$p4;\n\n  // console.log(\"mao---\",vender)\n  const [isOpen, setIsOpen] = useState(false);\n  const [listOfAppointments, setListOfAppointments] = useState([]);\n  const dataWithAppointments = vender === null || vender === void 0 ? void 0 : (_vender$data = vender.data) === null || _vender$data === void 0 ? void 0 : _vender$data.features.filter(v => {\n    var _v$properties$appoint;\n\n    return v.properties.appointments !== null && ((_v$properties$appoint = v.properties.appointments) === null || _v$properties$appoint === void 0 ? void 0 : _v$properties$appoint.length) !== 0;\n  });\n  const sliceData = dataWithAppointments.slice(0, Math.min(vender === null || vender === void 0 ? void 0 : vender.data.features.length, DISPLAY_LENGTH));\n  const rows = [...Array(Math.ceil(sliceData.length / COL_PER_ROW))];\n  const storeRows = rows.map((row, idx) => sliceData.slice(idx * COL_PER_ROW, idx * COL_PER_ROW + COL_PER_ROW));\n\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const onOpen = e => {\n    setListOfAppointments(e);\n    setIsOpen(true);\n  };\n\n  const convertBoolean = b => {\n    return b === true ? 'Yes' : 'No';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardGrid\",\n    children: [storeRows.map((stores, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: stores.map(s => {\n        console.log(\"sto---\", s);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: s.properties.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 47\n            }, this), s.properties.address, \", \", s.properties.city, \" \", s.properties.state, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              onClick: () => onOpen(s),\n              children: \"Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, s.properties.address, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this);\n      })\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      ariaHideApp: false,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Available Vaccine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Appointment Available: \", convertBoolean((_listOfAppointments$p = listOfAppointments.properties) === null || _listOfAppointments$p === void 0 ? void 0 : _listOfAppointments$p.appointments_available)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Appointment Second Dose Only: \", convertBoolean((_listOfAppointments$p2 = listOfAppointments.properties) === null || _listOfAppointments$p2 === void 0 ? void 0 : _listOfAppointments$p2.appointments_available_2nd_dose_only)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Appointment All Dose: \", convertBoolean((_listOfAppointments$p3 = listOfAppointments.properties) === null || _listOfAppointments$p3 === void 0 ? void 0 : _listOfAppointments$p3.appointments_available_all_doses)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_listOfAppointments$p4 = listOfAppointments.properties) === null || _listOfAppointments$p4 === void 0 ? void 0 : _listOfAppointments$p4.appointments.map((appointment, i) => {\n          var _listOfAppointments$p5;\n\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [appointment.type, \" available at \", appointment.time, \". \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: (_listOfAppointments$p5 = listOfAppointments.properties) === null || _listOfAppointments$p5 === void 0 ? void 0 : _listOfAppointments$p5.url,\n              children: \"Visit website\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 95\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LocalVaccineMap, {\n        storeData: sliceData,\n        currentState: vender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: onClose,\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"MJLYyqJRDOndbN+j4mTbkrNlT3E=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/jl_s/Gatech/2021Spring/6242/TeamProject/vaccine-distribution-app/D3Visualization/src/components/LocationCard.js"],"names":["useState","Modal","LocalVaccineMap","DISPLAY_LENGTH","COL_PER_ROW","Header","vender","isOpen","setIsOpen","listOfAppointments","setListOfAppointments","dataWithAppointments","data","features","filter","v","properties","appointments","length","sliceData","slice","Math","min","rows","Array","ceil","storeRows","map","row","idx","onClose","onOpen","e","convertBoolean","b","stores","s","console","log","name","address","city","state","appointments_available","appointments_available_2nd_dose_only","appointments_available_all_doses","appointment","i","type","time","url"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Modal from 'react-modal';\nimport LocalVaccineMap from \"./LocalVaccineMap\";\n\n// constants\nconst DISPLAY_LENGTH = 8\nconst COL_PER_ROW = 4\n\nconst Header = ({ vender }) => {\n    // console.log(\"mao---\",vender)\n    const [isOpen, setIsOpen] = useState(false)\n    const [listOfAppointments, setListOfAppointments] = useState([])\n    const dataWithAppointments = vender?.data?.features.filter((v) => v.properties.appointments !== null && v.properties.appointments?.length !== 0)\n    const sliceData = dataWithAppointments.slice(0, Math.min(vender?.data.features.length, DISPLAY_LENGTH))\n    const rows = [...Array(Math.ceil(sliceData.length / COL_PER_ROW))];\n    const storeRows = rows.map((row, idx) => sliceData.slice(idx * COL_PER_ROW, idx * COL_PER_ROW + COL_PER_ROW));\n    const onClose = () => {\n        setIsOpen(false)\n    }\n    const onOpen = (e) => {\n        setListOfAppointments(e)\n        setIsOpen(true)\n    }\n    const convertBoolean = (b) => {\n        return (b === true) ? 'Yes' : 'No'\n    }\n    return (\n        <div className='cardGrid'>\n            {storeRows.map((stores, idx) => (\n                <div className=\"row\" key={idx}>\n                    {stores.map(s => \n                    { console.log(\"sto---\",s)\n                    return <div key={s.properties.address} className=\"column\">\n                        <div className=\"card\"><b>{s.properties.name}</b>{s.properties.address}, {s.properties.city} {s.properties.state}\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => onOpen(s)}>Info</button>\n                        </div>\n                    </div>}\n                )}\n                </div>)\n            )}\n            <Modal isOpen={isOpen} ariaHideApp={false}>\n                <h4>Available Vaccine</h4>\n                <h6>Appointment Available: {convertBoolean(listOfAppointments.properties?.appointments_available)}</h6>\n                <h6>Appointment Second Dose Only: {convertBoolean(listOfAppointments.properties?.appointments_available_2nd_dose_only)}</h6>\n                <h6>Appointment All Dose: {convertBoolean(listOfAppointments.properties?.appointments_available_all_doses)}</h6>\n                <ul>\n                    {listOfAppointments.properties?.appointments.map((appointment, i) => {\n                        return <p key={i}>{appointment.type} available at {appointment.time}. <a href={listOfAppointments.properties?.url}>Visit website</a></p>\n                    })}\n                </ul>\n                <LocalVaccineMap storeData={sliceData} currentState={vender} />\n                <button type=\"button\" className=\"btn btn-danger\" onClick={onClose}>close</button>\n            </Modal>\n        </div>\n    );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}