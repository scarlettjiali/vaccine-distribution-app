{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, Suspense } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport Title from './components/Title';\nimport MapChart from './components/MapChart';\nimport './App.css';\nimport { Tooltip } from '@material-ui/core';\n\nfunction App() {\n  _s();\n\n  const [content, setContent] = useState(null);\n  const [state, setUSState] = useState(null);\n  const [vender, setVender] = useState(null);\n  console.log(vender);\n  useEffect(() => {\n    fetch(`https://www.vaccinespotter.org/api/v0/states/${state}.json`).then(response => response.json()).then(data => setVender({\n      data\n    }));\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fetching results...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 27\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Loading...\"\n        }, void 0, false),\n        children: /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapChart, {\n        setTooltipContent: setContent,\n        setUSState: setUSState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Add\",\n      interactive: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Interactive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), \" */}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GbQcVMnaMODfd21KYXONMvg0dwo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/App.js"],"names":["useState","useEffect","Suspense","ReactTooltip","Title","MapChart","Tooltip","App","content","setContent","state","setUSState","vender","setVender","console","log","fetch","then","response","json","data"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,UAAR,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAAE,gDAA+CN,KAAM,OAAvD,CAAL,CACGO,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIP,SAAS,CAAC;AAACO,MAAAA;AAAD,KAAD,CAFzB;AAGD,GAJQ,EAIN,CAACV,KAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,eAAE;AAAA;AAAA,yBAApB;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,QAAD;AAAU,QAAA,iBAAiB,EAAED,UAA7B;AAAyC,QAAA,UAAU,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,KAAf;AAAqB,MAAA,WAAW,MAAhC;AAAA,6BACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAjDQJ,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport Title from './components/Title';\nimport MapChart from './components/MapChart';\nimport './App.css';\nimport { Tooltip } from '@material-ui/core';\n\n\nfunction App() {\n  const [content, setContent] = useState(null);\n  const [state, setUSState] = useState(null);\n  const [vender, setVender] = useState(null);\n\n  console.log(vender)\n\n  useEffect(() => {\n    fetch(`https://www.vaccinespotter.org/api/v0/states/${state}.json`)\n      .then(response => response.json())\n      .then(data => setVender({data}));\n  }, [state]);\n\n  return (\n    <div className=\"container\">\n      <Suspense fallback={<div>Fetching results...</div>}>\n        <Suspense fallback={<>Loading...</>}>\n          <Title />\n        </Suspense>\n        <MapChart setTooltipContent={setContent} setUSState={setUSState} />\n      </Suspense>\n      <Tooltip title=\"Add\" interactive>\n  <Button>Interactive</Button>\n</Tooltip>\n      {/* <Tooltip \n        interactive\n        title=\"Add\"\n        // className=\"tooltip\"\n        // textColor=\"black\"\n        // backgroundColor=\"white\"\n      >\n        {/* {content && (\n          <>\n            <h3>{content.name}</h3>\n            <p className=\"elect-total\">{content.provider_count} available providers count</p>\n            <p className=\"elect-total\">{content.total_provider_count} available stores count</p>\n            <p className=\"elect-total\">Available detailed information</p>\n            {content.provider_brands.map((brand, i) => {\n              return <li key={brand.id}><b>{brand.name}</b> store count: {brand.location_count} - <a href={brand.url}>Visit</a></li>;\n            })}\n          </>\n        )} */}\n      \n        {/* {vender && vender?.data.features.slice(0, Math.min(vender?.data.features.length, 10)).map((store, i) => {\n            return <div className='card'><b>{store.properties.name}</b>: {store.properties.address}, {store.properties.city} {store.properties.state}</div>\n        })}\n        </Tooltip> */} */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}