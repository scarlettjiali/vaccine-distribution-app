{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/Cases.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport '../App.css';\nimport { scaleQuantize } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup, Marker, Annotation } from 'react-simple-maps';\nimport allStates from '../data/allstates.json';\nconst geoUrl = 'https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7';\n\nfunction Cases() {\n  _s();\n\n  const [content, setContent] = useState(null);\n  const [state, setUSState] = useState(null);\n  const [vender, setVender] = useState(null);\n  useEffect(() => {\n    fetch(`https://www.vaccinespotter.org/api/v0/states/${state}.json`).then(response => response.json()).then(data => setVender({\n      data\n    }));\n  }, [state]);\n  console.log(vender, state);\n  const [vaccineData, setVaccineData] = useState(null);\n  useEffect(() => {\n    fetch('https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7').then(response => response.json()).then(data => setVaccineData({\n      data\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fetching results...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Loading...\"\n        }, void 0, false),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid 19 Vaccine Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapChart, {\n        setTooltipContent: setContent,\n        setUSState: setUSState,\n        data: vaccineData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      className: \"tooltip\",\n      textColor: \"black\",\n      backgroundColor: \"white\",\n      children: content && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: content.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"elect-total\",\n          children: [content.provider_count, \" available providers count\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"elect-total\",\n          children: [content.total_provider_count, \" available stores count\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"elect-total\",\n          children: \"Available detailed information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), content.provider_brands.map((brand, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: brand.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 55\n            }, this), \" store count: \", brand.location_count]\n          }, brand.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), vender && /*#__PURE__*/_jsxDEV(LocationCard, {\n      vender: vender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this); // const [zoom, setZoom] = useState(2)\n  // const [state, setUSState] = useState(null);\n  // const offsets = {\n  //     VT: [50, -8],\n  //     NH: [34, 2],\n  //     MA: [30, -1],\n  //     RI: [28, 2],\n  //     CT: [35, 10],\n  //     NJ: [34, 1],\n  //     DE: [33, 0],\n  //     MD: [47, 10],\n  //     DC: [49, 21],\n  // };\n  // useEffect(() => {\n  //     fetch(\"https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7\")\n  //         .then(response => response.json())\n  //         .then(data => setUSState({data}));\n  // }, []);\n  // const colorScale = scaleQuantize()\n  // .domain([0, 1000000])\n  // .range([\n  //     \"#F4F4CC\",\n  //     \"#E7E3A3\",\n  //     \"#C3D977\",\n  //     \"#8BC94C\",\n  //     \"#44B823\",\n  //     \"#1EA31C\",\n  //     \"#168E2F\",\n  //     \"#11783C\",\n  //     \"#0C6142\",\n  // ]);\n  // console.log(zoom)\n  // return (\n  //     <>\n  //     <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n  //         {/* <ZoomableGroup center={[-mapCenter[0], -mapCenter[1]]} */}\n  //         disablePanning>\n  //        <Geographies geography={geoUrl}>\n  //             {({ geographies }) => (\n  //                 <>\n  //                     {geographies.map((geo) => {\n  //                         const cur = allStates.find((s) => s.val === geo.id);\n  //                         const stateData = state?.data.find((e) => e.state === cur.id)\n  //                         // console.log(\"key---\",stateData)\n  //                         return (   \n  //                             <>\n  //                                 <Geography\n  //                                     key={geo.rsmKey}\n  //                                     stroke=\"#FFF\"\n  //                                     geography={geo}\n  //                                     fill=\"#DDD\"\n  //                                     style={{\n  //                                         default: {\n  //                                             fill: colorScale(stateData?.actuals.cases),\n  //                                             outline: 'none',\n  //                                         },\n  //                                         hover: {\n  //                                             fill: \"#C53030\",\n  //                                             outline: 'none',\n  //                                         }\n  //                                     }}\n  //                                     // onMouseEnter={() => handleMouseEnter(geo.id, geo.properties.name)}\n  //                                     // onClick={() => handleClick(geo.id)}\n  //                                     // onMouseLeave={() => setTooltipContent(null)}\n  //                                 />\n  //                                 <g key={geo.rsmKey + '-name'}>\n  //                                     {cur &&\n  //                                     geo.id[0] > -160 &&\n  //                                     geo.id[0] < -67 &&\n  //                                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n  //                                         <Marker coordinates={geo.id}>\n  //                                             <text\n  //                                                 textAnchor=\"left\"\n  //                                                 fill=\"#FFF\"\n  //                                             >\n  //                                                 {cur.id}\n  //                                             </text>\n  //                                         </Marker>\n  //                                     ) : (\n  //                                         <Annotation\n  //                                             subject={geo.id}\n  //                                             dx={offsets[cur.id][0]}\n  //                                             dy={offsets[cur.id][1]}\n  //                                         >\n  //                                             <text x={4} fontSize={14}>\n  //                                                 {cur.id}\n  //                                             </text>\n  //                                         </Annotation>\n  //                                     ))}\n  //                                 </g>\n  //                             </>\n  //                         );\n  //                     })} \n  //                 </>\n  //             )} \n  //         </Geographies>\n  //         {/* </ZoomableGroup> */}\n  //     </ComposableMap>\n  //     {/* <ReactTooltip>{content}</ReactTooltip> */}\n  //     {/* <button className=\"ZoomBtn\" onClick={() => setZoom(prev => prev + 1)}>\n  //     +\n  //   </button>\n  //   <button className=\"ZoomBtn\" onClick={() => setZoom(prev => prev - 1)}>\n  //     -\n  //   </button> */}\n  //   </>\n  // );\n}\n\n_s(Cases, \"lDH2ypQcd5F1MWgZ1E8HXRyIJlM=\");\n\n_c = Cases;\nexport default Cases;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cases\");","map":{"version":3,"sources":["/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/Cases.js"],"names":["useState","useEffect","scaleQuantize","ComposableMap","Geographies","Geography","ZoomableGroup","Marker","Annotation","allStates","geoUrl","Cases","content","setContent","state","setUSState","vender","setVender","fetch","then","response","json","data","console","log","vaccineData","setVaccineData","name","provider_count","total_provider_count","provider_brands","map","brand","i","location_count","id"],"mappings":"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","sourcesContent":["import { useState, useEffect} from 'react';\nimport '../App.css';\nimport { scaleQuantize } from \"d3-scale\";\nimport {\n    ComposableMap,\n    Geographies,\n    Geography,\n    ZoomableGroup,\n    Marker,\n    Annotation,\n} from 'react-simple-maps';\nimport allStates from '../data/allstates.json';\n\nconst geoUrl = 'https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7';\n\n\nfunction Cases() {\n    const [content, setContent] = useState(null);\n    const [state, setUSState] = useState(null);\n    const [vender, setVender] = useState(null);\n    useEffect(() => {\n        fetch(`https://www.vaccinespotter.org/api/v0/states/${state}.json`)\n            .then(response => response.json())\n            .then(data => setVender({data}));\n    }, [state]);\n    console.log(vender,state)\n    const [vaccineData, setVaccineData] = useState(null);\n    useEffect(() => {\n        fetch('https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7')\n            .then(response => response.json())\n            .then(data => setVaccineData({data}));\n    }, [])\n    return (\n        <div className=\"container\">\n            <Suspense fallback={<div>Fetching results...</div>}>\n                <Suspense fallback={<>Loading...</>}>\n                    <h1>Covid 19 Vaccine Tracker</h1>\n                </Suspense>\n                <MapChart setTooltipContent={setContent} setUSState={setUSState} data={vaccineData}/>\n            </Suspense>\n            <ReactTooltip\n                className=\"tooltip\"\n                textColor=\"black\"\n                backgroundColor=\"white\"\n            >\n                {content && (\n                    <>\n                        <h3>{content.name}</h3>\n                        <p className=\"elect-total\">{content.provider_count} available providers count</p>\n                        <p className=\"elect-total\">{content.total_provider_count} available stores count</p>\n                        <p className=\"elect-total\">Available detailed information</p>\n                        {content.provider_brands.map((brand, i) => {\n                            return <li key={brand.id}><b>{brand.name}</b> store count: {brand.location_count}</li>;\n                        })}\n                    </>\n                )}\n            </ReactTooltip>\n            {vender && <LocationCard vender={vender} />}\n        </div>\n    );\n    // const [zoom, setZoom] = useState(2)\n\n    // const [state, setUSState] = useState(null);\n    \n    // const offsets = {\n    //     VT: [50, -8],\n    //     NH: [34, 2],\n    //     MA: [30, -1],\n    //     RI: [28, 2],\n    //     CT: [35, 10],\n    //     NJ: [34, 1],\n    //     DE: [33, 0],\n    //     MD: [47, 10],\n    //     DC: [49, 21],\n    // };\n\n    // useEffect(() => {\n    //     fetch(\"https://api.covidactnow.org/v2/states.json?apiKey=63f652b7dabd4bdda544b20f5bdb60e7\")\n    //         .then(response => response.json())\n    //         .then(data => setUSState({data}));\n    // }, []);\n   \n    // const colorScale = scaleQuantize()\n    // .domain([0, 1000000])\n    // .range([\n    //     \"#F4F4CC\",\n    //     \"#E7E3A3\",\n    //     \"#C3D977\",\n    //     \"#8BC94C\",\n    //     \"#44B823\",\n    //     \"#1EA31C\",\n    //     \"#168E2F\",\n    //     \"#11783C\",\n    //     \"#0C6142\",\n    // ]);\n    // console.log(zoom)\n\n    // return (\n    //     <>\n    //     <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n    //         {/* <ZoomableGroup center={[-mapCenter[0], -mapCenter[1]]} */}\n    //         disablePanning>\n    //        <Geographies geography={geoUrl}>\n    //             {({ geographies }) => (\n    //                 <>\n    //                     {geographies.map((geo) => {\n    //                         const cur = allStates.find((s) => s.val === geo.id);\n    //                         const stateData = state?.data.find((e) => e.state === cur.id)\n    //                         // console.log(\"key---\",stateData)\n    //                         return (   \n    //                             <>\n                                \n    //                                 <Geography\n    //                                     key={geo.rsmKey}\n    //                                     stroke=\"#FFF\"\n    //                                     geography={geo}\n    //                                     fill=\"#DDD\"\n    //                                     style={{\n    //                                         default: {\n    //                                             fill: colorScale(stateData?.actuals.cases),\n    //                                             outline: 'none',\n    //                                         },\n    //                                         hover: {\n    //                                             fill: \"#C53030\",\n    //                                             outline: 'none',\n    //                                         }\n    //                                     }}\n    //                                     // onMouseEnter={() => handleMouseEnter(geo.id, geo.properties.name)}\n    //                                     // onClick={() => handleClick(geo.id)}\n    //                                     // onMouseLeave={() => setTooltipContent(null)}\n    //                                 />\n    //                                 <g key={geo.rsmKey + '-name'}>\n    //                                     {cur &&\n    //                                     geo.id[0] > -160 &&\n    //                                     geo.id[0] < -67 &&\n    //                                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n    //                                         <Marker coordinates={geo.id}>\n    //                                             <text\n    //                                                 textAnchor=\"left\"\n    //                                                 fill=\"#FFF\"\n    //                                             >\n    //                                                 {cur.id}\n    //                                             </text>\n    //                                         </Marker>\n    //                                     ) : (\n    //                                         <Annotation\n    //                                             subject={geo.id}\n    //                                             dx={offsets[cur.id][0]}\n    //                                             dy={offsets[cur.id][1]}\n    //                                         >\n    //                                             <text x={4} fontSize={14}>\n    //                                                 {cur.id}\n    //                                             </text>\n    //                                         </Annotation>\n    //                                     ))}\n    //                                 </g>\n    //                             </>\n    //                         );\n    //                     })} \n    //                 </>\n    //             )} \n                \n    //         </Geographies>\n    //         {/* </ZoomableGroup> */}\n    //     </ComposableMap>\n    //     {/* <ReactTooltip>{content}</ReactTooltip> */}\n    //     {/* <button className=\"ZoomBtn\" onClick={() => setZoom(prev => prev + 1)}>\n    //     +\n    //   </button>\n    //   <button className=\"ZoomBtn\" onClick={() => setZoom(prev => prev - 1)}>\n    //     -\n    //   </button> */}\n    //   </>\n        \n    // );\n}\n\nexport default Cases;\n"]},"metadata":{},"sourceType":"module"}