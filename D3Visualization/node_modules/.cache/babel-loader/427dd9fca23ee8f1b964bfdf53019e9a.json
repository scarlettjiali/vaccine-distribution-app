{"ast":null,"code":"import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n  return isKeyboardShown;\n}","map":{"version":3,"sources":["useIsKeyboardShown.tsx"],"names":["React","handleKeyboardShow","setIsKeyboardShown","handleKeyboardHide","Platform","Keyboard"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,EAAA,QAAA,QAAA,cAAA;AAEA,eAAe,SAAA,kBAAA,GAA8B;AAC3C,QAAM,CAAA,eAAA,EAAA,kBAAA,IAAwCA,KAAK,CAALA,QAAAA,CAA9C,KAA8CA,CAA9C;AAEAA,EAAAA,KAAK,CAALA,SAAAA,CAAgB,MAAM;AACpB,UAAMC,kBAAkB,GAAG,MAAMC,kBAAkB,CAAnD,IAAmD,CAAnD;;AACA,UAAMC,kBAAkB,GAAG,MAAMD,kBAAkB,CAAnD,KAAmD,CAAnD;;AAEA,QAAIE,QAAQ,CAARA,EAAAA,KAAJ,KAAA,EAA2B;AACzBC,MAAAA,QAAQ,CAARA,WAAAA,CAAAA,kBAAAA,EAAAA,kBAAAA;AACAA,MAAAA,QAAQ,CAARA,WAAAA,CAAAA,kBAAAA,EAAAA,kBAAAA;AAFF,KAAA,MAGO;AACLA,MAAAA,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,EAAAA,kBAAAA;AACAA,MAAAA,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,EAAAA,kBAAAA;AACD;;AAED,WAAO,MAAM;AACX,UAAID,QAAQ,CAARA,EAAAA,KAAJ,KAAA,EAA2B;AACzBC,QAAAA,QAAQ,CAARA,cAAAA,CAAAA,kBAAAA,EAAAA,kBAAAA;AACAA,QAAAA,QAAQ,CAARA,cAAAA,CAAAA,kBAAAA,EAAAA,kBAAAA;AAFF,OAAA,MAGO;AACLA,QAAAA,QAAQ,CAARA,cAAAA,CAAAA,iBAAAA,EAAAA,kBAAAA;AACAA,QAAAA,QAAQ,CAARA,cAAAA,CAAAA,iBAAAA,EAAAA,kBAAAA;AACD;AAPH,KAAA;AAZFL,GAAAA,EAAAA,EAAAA;AAuBA,SAAA,eAAA;AACD","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"module"}