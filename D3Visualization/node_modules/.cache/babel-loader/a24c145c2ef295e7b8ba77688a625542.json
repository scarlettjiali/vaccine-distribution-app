{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/MapChart.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, memo } from 'react';\nimport { geoCentroid } from 'd3-geo';\nimport { scaleQuantize } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from 'react-simple-maps';\nimport ReactTooltip from 'react-tooltip';\nimport allStates from '../data/allstates.json';\nconst geoUrl = 'https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json';\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\nconst colorScale = scaleQuantize().domain([0, 1000]).range([\"#b0b8d0\", \"#a79bd5\", \"#9880d1\", \"#8667c9\", \"#7250bc\", \"#5c3aac\", \"#442599\", \"#2a1285\", \"#000070\"]);\n\nconst MapChart = props => {\n  _s();\n\n  console.log(\"----\", props.case);\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  }, []);\n\n  const handleMouseEnter = (geoId, name) => {\n    const cur = allStates.find(s => s.val === geoId);\n    const stateData = props.data.data.find(e => e.code === cur.id);\n    props.setTooltipContent({\n      name: stateData.name,\n      provider_count: stateData.provider_brand_count,\n      total_provider_count: stateData.store_count,\n      provider_brands: stateData.provider_brands\n    });\n    ReactTooltip.rebuild();\n  };\n\n  const handleClick = geoId => {\n    const cur = allStates.find(s => s.val === geoId);\n    props.setUSState(cur.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    \"data-tip\": \"\",\n    projection: \"geoAlbersUsa\",\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: geographies.map(geo => {\n          const centroid = geoCentroid(geo); // console.log(stateData?.store_count)\n\n          let mapData;\n          let stateData;\n          const cur = allStates.find(s => s.val === geo.id);\n\n          if (props.case == \"appointment\") {\n            var _props$data;\n\n            // const cur = allStates.find((s) => s.val === geo.id);\n            const stateData = (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.data.find(e => e.code === cur.id);\n            mapData = stateData === null || stateData === void 0 ? void 0 : stateData.store_count;\n          } else if (props.case == \"case\") {\n            var _props$data2, _stateData;\n\n            stateData = (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.state.data.find(e => e.state === cur.id);\n            mapData = (_stateData = stateData) === null || _stateData === void 0 ? void 0 : _stateData.actuals.cases;\n            console.log(\"--++++-\", mapData);\n          } else {\n            var _state, _stateData2;\n\n            // const cur = allStates.find((s) => s.val === geo.id);\n            stateData = (_state = state) === null || _state === void 0 ? void 0 : _state.data.find(e => e.state === cur.id);\n            mapData = (_stateData2 = stateData) === null || _stateData2 === void 0 ? void 0 : _stateData2.store_count;\n          }\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Geography, {\n              stroke: \"#FFF\",\n              geography: geo,\n              fill: \"#DDD\",\n              style: {\n                default: {\n                  fill: colorScale(mapData || 0),\n                  outline: 'none'\n                },\n                hover: {\n                  fill: \"#C53030\",\n                  outline: 'none'\n                }\n              },\n              onMouseEnter: () => handleMouseEnter(geo.id, geo.properties.name),\n              onClick: () => handleClick(geo.id),\n              onMouseLeave: () => props.setTooltipContent(null)\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n              children: cur && centroid[0] > -160 && centroid[0] < -67 && (Object.keys(offsets).indexOf(cur.id) === -1 ? /*#__PURE__*/_jsxDEV(Marker, {\n                coordinates: centroid,\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  textAnchor: \"left\",\n                  fill: \"#FFF\",\n                  children: cur.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(Annotation, {\n                subject: centroid,\n                dx: offsets[cur.id][0],\n                dy: offsets[cur.id][1],\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: 4,\n                  fontSize: 14,\n                  children: cur.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 45\n              }, this))\n            }, geo.rsmKey + '-name', false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapChart;\nexport default _c2 = /*#__PURE__*/memo(MapChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/huixu/Desktop/Georgia Tech/vaccine-distribution-app/D3Visualization/src/components/MapChart.js"],"names":["useEffect","useState","memo","geoCentroid","scaleQuantize","ComposableMap","Geographies","Geography","Marker","Annotation","ReactTooltip","allStates","geoUrl","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","colorScale","domain","range","MapChart","props","console","log","case","rebuild","handleMouseEnter","geoId","name","cur","find","s","val","stateData","data","e","code","id","setTooltipContent","provider_count","provider_brand_count","total_provider_count","store_count","provider_brands","handleClick","setUSState","geographies","map","geo","centroid","mapData","state","actuals","cases","default","fill","outline","hover","properties","rsmKey","Object","keys","indexOf"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SACIC,aADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,MAJJ,EAKIC,UALJ,QAMO,mBANP;AAOA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,MAAM,GAAG,yDAAf;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,CAAC,CAAN,CADQ;AAEZC,EAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,CAAL,CAFQ;AAGZC,EAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,CAAC,CAAN,CAHQ;AAIZC,EAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,CAAL,CAJQ;AAKZC,EAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,EAAL,CALQ;AAMZC,EAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,CAAL,CANQ;AAOZC,EAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,CAAL,CAPQ;AAQZC,EAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,EAAL,CARQ;AASZC,EAAAA,EAAE,EAAE,CAAC,EAAD,EAAK,EAAL;AATQ,CAAhB;AAYA,MAAMC,UAAU,GAAGnB,aAAa,GAC3BoB,MADc,CACP,CAAC,CAAD,EAAI,IAAJ,CADO,EAEdC,KAFc,CAER,CACH,SADG,EAEH,SAFG,EAGH,SAHG,EAIH,SAJG,EAKH,SALG,EAMH,SANG,EAOH,SAPG,EAQH,SARG,EASH,SATG,CAFQ,CAAnB;;AAcA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,KAAK,CAACG,IAAzB;AAKA9B,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACqB,OAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACtC,UAAMC,GAAG,GAAGxB,SAAS,CAACyB,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUL,KAAhC,CAAZ;AACA,UAAMM,SAAS,GAAGZ,KAAK,CAACa,IAAN,CAAWA,IAAX,CAAgBJ,IAAhB,CAAsBK,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWP,GAAG,CAACQ,EAA3C,CAAlB;AACAhB,IAAAA,KAAK,CAACiB,iBAAN,CAAwB;AACpBV,MAAAA,IAAI,EAAEK,SAAS,CAACL,IADI;AAEpBW,MAAAA,cAAc,EAAEN,SAAS,CAACO,oBAFN;AAGpBC,MAAAA,oBAAoB,EAAER,SAAS,CAACS,WAHZ;AAIpBC,MAAAA,eAAe,EAAEV,SAAS,CAACU;AAJP,KAAxB;AAMAvC,IAAAA,YAAY,CAACqB,OAAb;AACH,GAVD;;AAYA,QAAMmB,WAAW,GAAIjB,KAAD,IAAW;AAC3B,UAAME,GAAG,GAAGxB,SAAS,CAACyB,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUL,KAAhC,CAAZ;AACAN,IAAAA,KAAK,CAACwB,UAAN,CAAiBhB,GAAG,CAACQ,EAArB;AACH,GAHD;;AAKA,sBACI,QAAC,aAAD;AAAe,gBAAS,EAAxB;AAA2B,IAAA,UAAU,EAAC,cAAtC;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAE/B,MAAxB;AAAA,gBACK,CAAC;AAAEwC,QAAAA;AAAF,OAAD,kBACG;AAAA,kBACKA,WAAW,CAACC,GAAZ,CAAiBC,GAAD,IAAS;AAEtB,gBAAMC,QAAQ,GAAGpD,WAAW,CAACmD,GAAD,CAA5B,CAFsB,CAItB;;AACA,cAAIE,OAAJ;AACA,cAAIjB,SAAJ;AACA,gBAAMJ,GAAG,GAAGxB,SAAS,CAACyB,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUgB,GAAG,CAACX,EAApC,CAAZ;;AACA,cAAGhB,KAAK,CAACG,IAAN,IAAY,aAAf,EAA6B;AAAA;;AACzB;AACA,kBAAMS,SAAS,kBAAGZ,KAAK,CAACa,IAAT,gDAAG,YAAYA,IAAZ,CAAiBJ,IAAjB,CAAuBK,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWP,GAAG,CAACQ,EAA5C,CAAlB;AACAa,YAAAA,OAAO,GAACjB,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAES,WAAnB;AACH,WAJD,MAIM,IAAIrB,KAAK,CAACG,IAAN,IAAY,MAAhB,EAAuB;AAAA;;AAEzBS,YAAAA,SAAS,mBAAGZ,KAAK,CAACa,IAAT,iDAAG,aAAYiB,KAAZ,CAAkBjB,IAAlB,CAAuBJ,IAAvB,CAA6BK,CAAD,IAAOA,CAAC,CAACgB,KAAF,KAAYtB,GAAG,CAACQ,EAAnD,CAAZ;AACAa,YAAAA,OAAO,iBAACjB,SAAD,+CAAC,WAAWmB,OAAX,CAAmBC,KAA3B;AACA/B,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB2B,OAAtB;AACH,WALK,MAKD;AAAA;;AACD;AACAjB,YAAAA,SAAS,aAAGkB,KAAH,2CAAG,OAAOjB,IAAP,CAAYJ,IAAZ,CAAkBK,CAAD,IAAOA,CAAC,CAACgB,KAAF,KAAYtB,GAAG,CAACQ,EAAxC,CAAZ;AACAa,YAAAA,OAAO,kBAACjB,SAAD,gDAAC,YAAWS,WAAnB;AACH;;AAED,8BACI;AAAA,oCACI,QAAC,SAAD;AAEI,cAAA,MAAM,EAAC,MAFX;AAGI,cAAA,SAAS,EAAEM,GAHf;AAII,cAAA,IAAI,EAAC,MAJT;AAKI,cAAA,KAAK,EAAE;AACHM,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,IAAI,EAAEtC,UAAU,CAACiC,OAAO,IAAG,CAAX,CADX;AAELM,kBAAAA,OAAO,EAAE;AAFJ,iBADN;AAKHC,gBAAAA,KAAK,EAAE;AACHF,kBAAAA,IAAI,EAAE,SADH;AAEHC,kBAAAA,OAAO,EAAE;AAFN;AALJ,eALX;AAeI,cAAA,YAAY,EAAE,MAAM9B,gBAAgB,CAACsB,GAAG,CAACX,EAAL,EAASW,GAAG,CAACU,UAAJ,CAAe9B,IAAxB,CAfxC;AAgBI,cAAA,OAAO,EAAE,MAAMgB,WAAW,CAACI,GAAG,CAACX,EAAL,CAhB9B;AAiBI,cAAA,YAAY,EAAE,MAAMhB,KAAK,CAACiB,iBAAN,CAAwB,IAAxB;AAjBxB,eACSU,GAAG,CAACW,MADb;AAAA;AAAA;AAAA;AAAA,oBADJ,eAoBI;AAAA,wBACK9B,GAAG,IACJoB,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAC,GADd,IAEDA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAC,EAFd,KAGAW,MAAM,CAACC,IAAP,CAAYtD,OAAZ,EAAqBuD,OAArB,CAA6BjC,GAAG,CAACQ,EAAjC,MAAyC,CAAC,CAA1C,gBACG,QAAC,MAAD;AAAQ,gBAAA,WAAW,EAAEY,QAArB;AAAA,uCACI;AACI,kBAAA,UAAU,EAAC,MADf;AAEI,kBAAA,IAAI,EAAC,MAFT;AAAA,4BAIKpB,GAAG,CAACQ;AAJT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADH,gBAUG,QAAC,UAAD;AACI,gBAAA,OAAO,EAAEY,QADb;AAEI,gBAAA,EAAE,EAAE1C,OAAO,CAACsB,GAAG,CAACQ,EAAL,CAAP,CAAgB,CAAhB,CAFR;AAGI,gBAAA,EAAE,EAAE9B,OAAO,CAACsB,GAAG,CAACQ,EAAL,CAAP,CAAgB,CAAhB,CAHR;AAAA,uCAKI;AAAM,kBAAA,CAAC,EAAE,CAAT;AAAY,kBAAA,QAAQ,EAAE,EAAtB;AAAA,4BACKR,GAAG,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBAbH;AADL,eAAQW,GAAG,CAACW,MAAJ,GAAa,OAArB;AAAA;AAAA;AAAA;AAAA,oBApBJ;AAAA,0BADJ;AAgDH,SAvEA;AADL;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkFH,CA7GD;;GAAMvC,Q;;KAAAA,Q;AA8GN,kCAAexB,IAAI,CAACwB,QAAD,CAAnB","sourcesContent":["import { useEffect, useState, memo } from 'react';\nimport { geoCentroid } from 'd3-geo';\nimport { scaleQuantize } from \"d3-scale\";\nimport {\n    ComposableMap,\n    Geographies,\n    Geography,\n    Marker,\n    Annotation,\n} from 'react-simple-maps';\nimport ReactTooltip from 'react-tooltip';\nimport allStates from '../data/allstates.json';\n\nconst geoUrl = 'https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json';\n\nconst offsets = {\n    VT: [50, -8],\n    NH: [34, 2],\n    MA: [30, -1],\n    RI: [28, 2],\n    CT: [35, 10],\n    NJ: [34, 1],\n    DE: [33, 0],\n    MD: [47, 10],\n    DC: [49, 21],\n};\n\nconst colorScale = scaleQuantize()\n    .domain([0, 1000])\n    .range([\n        \"#b0b8d0\",\n        \"#a79bd5\",\n        \"#9880d1\",\n        \"#8667c9\",\n        \"#7250bc\",\n        \"#5c3aac\",\n        \"#442599\",\n        \"#2a1285\",\n        \"#000070\"\n    ]);\n\nconst MapChart = (props) => {\n    console.log(\"----\",props.case)\n\n\n\n\n    useEffect(() => {\n        ReactTooltip.rebuild();\n    }, []);\n\n    const handleMouseEnter = (geoId, name) => {\n        const cur = allStates.find((s) => s.val === geoId);\n        const stateData = props.data.data.find((e) => e.code === cur.id)\n        props.setTooltipContent({\n            name: stateData.name,\n            provider_count: stateData.provider_brand_count,\n            total_provider_count: stateData.store_count,\n            provider_brands: stateData.provider_brands\n        });\n        ReactTooltip.rebuild();\n    };\n\n    const handleClick = (geoId) => {\n        const cur = allStates.find((s) => s.val === geoId);\n        props.setUSState(cur.id)\n    }\n\n    return (\n        <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n            <Geographies geography={geoUrl}>\n                {({ geographies }) => (\n                    <>\n                        {geographies.map((geo) => {\n                            \n                            const centroid = geoCentroid(geo);\n                            \n                            // console.log(stateData?.store_count)\n                            let mapData;\n                            let stateData\n                            const cur = allStates.find((s) => s.val === geo.id);\n                            if(props.case==\"appointment\"){\n                                // const cur = allStates.find((s) => s.val === geo.id);\n                                const stateData = props.data?.data.find((e) => e.code === cur.id)\n                                mapData=stateData?.store_count\n                            }else if (props.case==\"case\"){\n                                \n                                stateData = props.data?.state.data.find((e) => e.state === cur.id)\n                                mapData=stateData?.actuals.cases\n                                console.log(\"--++++-\",mapData)\n                            }else{\n                                // const cur = allStates.find((s) => s.val === geo.id);\n                                stateData = state?.data.find((e) => e.state === cur.id)\n                                mapData=stateData?.store_count\n                            }\n                            \n                            return (\n                                <>\n                                    <Geography\n                                        key={geo.rsmKey}\n                                        stroke=\"#FFF\"\n                                        geography={geo}\n                                        fill=\"#DDD\"\n                                        style={{\n                                            default: {\n                                                fill: colorScale(mapData|| 0),\n                                                outline: 'none',\n                                            },\n                                            hover: {\n                                                fill: \"#C53030\",\n                                                outline: 'none',\n                                            }\n                                        }}\n                                        onMouseEnter={() => handleMouseEnter(geo.id, geo.properties.name)}\n                                        onClick={() => handleClick(geo.id)}\n                                        onMouseLeave={() => props.setTooltipContent(null)}\n                                    />\n                                    <g key={geo.rsmKey + '-name'}>\n                                        {cur &&\n                                        centroid[0] > -160 &&\n                                        centroid[0] < -67 &&\n                                        (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                                            <Marker coordinates={centroid}>\n                                                <text\n                                                    textAnchor=\"left\"\n                                                    fill=\"#FFF\"\n                                                >\n                                                    {cur.id}\n                                                </text>\n                                            </Marker>\n                                        ) : (\n                                            <Annotation\n                                                subject={centroid}\n                                                dx={offsets[cur.id][0]}\n                                                dy={offsets[cur.id][1]}\n                                            >\n                                                <text x={4} fontSize={14}>\n                                                    {cur.id}\n                                                </text>\n                                            </Annotation>\n                                        ))}\n                                    </g>\n                                </>\n                            );\n                        })}\n                    </>\n                )}\n            </Geographies>\n        </ComposableMap>\n    );\n};\nexport default memo(MapChart);\n"]},"metadata":{},"sourceType":"module"}